generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int           @id @default(autoincrement())
  firstName          String
  lastName           String
  address            String
  email              String        @unique
  phoneNumber        String
  password           String
  confirmPassword    String
  products           Product[] // One-to-many relationship: A user can create multiple products
  transactions       Transaction[] // One-to-many relationship: A user can have multiple transactions
  buyerTransactions  Transaction[] @relation("BuyerTransactions") // Define reverse relation for buyer transactions
  renterTransactions Transaction[] @relation("RenterTransactions") // Define reverse relation for renter transactions
}

model Product {
  id           Int           @id @default(autoincrement())
  name         String
  description  String
  price        Float
  rentalPrice  Float
  isForSale    Boolean
  isForRent    Boolean
  status       String        @default("AVAILABLE") // AVAILABLE, SOLD, RENTED
  ownerId      Int
  owner        User          @relation(fields: [ownerId], references: [id])
  categories   Category[]    @relation("ProductCategories")
  transactions Transaction[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique // Category names must be unique (e.g., "ELECTRONICS", "FURNITURE")
  products Product[] @relation("ProductCategories") // Many-to-many relationship
}

model Transaction {
  id        Int     @id @default(autoincrement())
  productId Int
  product   Product @relation(fields: [productId], references: [id])

  buyerId Int? // For purchases
  buyer   User? @relation("BuyerTransactions", fields: [buyerId], references: [id])

  renterId Int? // For rentals
  renter   User? @relation("RenterTransactions", fields: [renterId], references: [id])

  type      String // BUY, RENT
  createdAt DateTime @default(now())
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?
}
